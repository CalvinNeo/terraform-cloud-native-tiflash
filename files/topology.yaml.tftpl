global:
  user: "tidb"
  ssh_port: 22
  deploy_dir: "/tidb-deploy"

server_configs:
  pd:
    replication.enable-placement-rules: true
    replication.location-labels: ["host"]
    replication.max-replica: 1
    keyspace.pre-alloc: ["a"]
    schedule.merge-schedule-limit: 8
    schedule.low-space-ration: 1.0
    schedule.replica-schedule-limit: 500
    schedule.split-merge-interval: "5s"
    schedule.max-merge-region-size: 2000
    schedule.max-merge-region-keys: 200000000
  tikv:
    storage.enable-ttl: true
    storage.api-version: 2
    dfs.prefix:  "local-cluster"
    dfs.s3-endpoint:  http://s3.${s3_region}.amazonaws.com
    dfs.s3-bucket:  ${s3_bucket}
    dfs.s3-region:  "${s3_region}"
    coprocessor.region-split-keys: 200000000
    coprocessor.region-split-size: "2000MiB"
    rfstore.region-split-keys: 200000000
    rfstore.region-split-size: "2000MiB"
  tidb:
    disaggregated-tiflash: true
    keyspace-name: "a"
    enable-telemetry: false
    ratelimit.full-speed: 1048576000
    ratelimit.full-speed-capacity: 1048576000
    ratelimit.low-speed-watermark: 1048576000000
    ratelimit.block-write-watermark: 1048576000000
    log.level: "info"
    optracing.enable: true
    security.enable-sem: false
    tiflash-replicas.constraints: [{"key": "engine", "op": "in", "values": ["tiflash"]}, {"key": "engine_role", "op": "in", "values": ["write"]}]
    tiflash-replicas.group-id: "enable_s3_wn_region"
    tiflash-replicas.extra-s3-rule: false
    tiflash-replicas.min-count: 1
  tiflash:
    flash.use_autoscaler: false
    storage.s3.endpoint: http://s3.${s3_region}.amazonaws.com
    storage.s3.bucket: ${s3_bucket}
    storage.s3.root: /tiflash-cs3/
    storage.api_version: 2

pd_servers:
  - host: 172.31.8.1


tidb_servers:
  %{~ for host in tidb_hosts ~}
  - host: ${host}
  %{~ endfor ~}

tikv_servers:
  %{~ for idx, host in tikv_hosts ~}
  - host: ${host}
    config:
      server.labels: { host: "tikv${idx}" }
  %{~ endfor ~}

tiflash_servers:
  %{~ for host in tiflash_write_hosts ~}
  - host: ${host}
    config:
      flash.disaggregated_mode: tiflash_write
      storage.main.dir: ["/tidb-deploy/tiflash-9000/data"]
      profiles.default.remote_checkpoint_only_upload_manifest: false
      profiles.default.fap_handle_concurrency: 30
      profiles.default.fap_task_timeout_seconds: 120
    learner_config:
      raftstore.snap-handle-pool-size: 2
      log-level: debug
      dfs.prefix: "local-cluster"
      dfs.s3-endpoint: "http://s3.${s3_region}.amazonaws.com"
      dfs.s3-bucket: ${s3_bucket}
      dfs.s3-region:  "${s3_region}"
      storage.api-version: 2
      storage.enable-ttl: true
      engine-store.enable-fast-add-peer: false
  %{~ endfor ~}
  %{~ for host in tiflash_compute_hosts ~}
  - host: ${host}
    config:
      delta_index_cache_size: 2000
      flash.disaggregated_mode: tiflash_compute
      storage.remote.cache.dir: /tidb-deploy/tiflash-9000/remote_cache
      storage.remote.cache.capacity: 100000000000
      storage.main.dir: ["/tidb-deploy/tiflash-9000/data"]
  %{~ endfor ~}

grafana_servers:
  - host: 172.31.8.1

monitoring_servers:
  - host: 172.31.8.1